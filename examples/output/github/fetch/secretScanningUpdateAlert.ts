/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import type { SecretScanningAlertResolution } from '../schemas/SecretScanningAlertResolution';
import type { SecretScanningAlertState } from '../schemas/SecretScanningAlertState';
import type { AlertNumber } from '../schemas/AlertNumber';

import { fetcher as _fetcher } from './fetcher';

export interface SecretScanningUpdateAlertPathParams {
	owner: string;
	repo: string;
	alert_number: AlertNumber;
}

export interface SecretScanningUpdateAlertRequestBody {
	resolution?: SecretScanningAlertResolution;
	state: SecretScanningAlertState;
}

export interface SecretScanningUpdateAlertProps
	extends Omit<RequestInit, 'method' | 'body'>,
		SecretScanningUpdateAlertPathParams {
	body: SecretScanningUpdateAlertRequestBody;
}

/**
 * Updates the status of a secret scanning alert in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.
 *
 * GitHub Apps must have the `secret_scanning_alerts` write permission to use this endpoint.
 */
export async function secretScanningUpdateAlert(props: SecretScanningUpdateAlertProps) {
	const { owner, repo, alert_number, ...rest } = props;

	return _fetcher<unknown, unknown, SecretScanningUpdateAlertRequestBody>({
		path: `/repos/${owner}/${repo}/secret-scanning/alerts/${alert_number}`,
		method: 'PATCH',
		...rest,
	});
}
