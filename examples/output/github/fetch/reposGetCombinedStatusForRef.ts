/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

export interface ReposGetCombinedStatusForRefPathParams {
	owner: string;
	repo: string;
	ref: string;
}

export interface ReposGetCombinedStatusForRefQueryParams {
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface ReposGetCombinedStatusForRefProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ReposGetCombinedStatusForRefPathParams {
	queryParams: ReposGetCombinedStatusForRefQueryParams;
}

/**
 * Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.
 *
 * The most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.
 *
 * Additionally, a combined `state` is returned. The `state` is one of:
 *
 * *   **failure** if any of the contexts report as `error` or `failure`
 * *   **pending** if there are no statuses or a context is `pending`
 * *   **success** if the latest status for all contexts is `success`
 */
export async function reposGetCombinedStatusForRef(props: ReposGetCombinedStatusForRefProps) {
	const { owner, repo, ref, queryParams, ...rest } = props;

	const response = await fetch(`/repos/${owner}/${repo}/commits/${ref}/status`, {
		method: 'GET',
		...rest,
		headers: {
			'Content-Type': 'application/json',
			...rest.headers,
		},
	});

	const json = await response.json();

	return json;
}
