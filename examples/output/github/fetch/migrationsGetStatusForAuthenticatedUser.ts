/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

export interface MigrationsGetStatusForAuthenticatedUserPathParams {
	migration_id: number;
}

export interface MigrationsGetStatusForAuthenticatedUserQueryParams {
	exclude?: string[];
}

export interface MigrationsGetStatusForAuthenticatedUserProps
	extends Omit<RequestInit, 'method' | 'body'>,
		MigrationsGetStatusForAuthenticatedUserPathParams {
	queryParams: MigrationsGetStatusForAuthenticatedUserQueryParams;
}

/**
 * Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following values:
 *
 * *   `pending` - the migration hasn't started yet.
 * *   `exporting` - the migration is in progress.
 * *   `exported` - the migration finished successfully.
 * *   `failed` - the migration failed.
 *
 * Once the migration has been `exported` you can [download the migration archive](https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive).
 */
export async function migrationsGetStatusForAuthenticatedUser(
	props: MigrationsGetStatusForAuthenticatedUserProps,
) {
	const { migration_id, queryParams, ...rest } = props;

	const response = await fetch(`/user/migrations/${migration_id}`, {
		method: 'GET',
		...rest,
		headers: {
			'Content-Type': 'application/json',
			...rest.headers,
		},
	});

	const json = await response.json();

	return json;
}
