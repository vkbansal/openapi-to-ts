/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface IssuesLockPathParams {
	owner: string;
	repo: string;
	issue_number: number;
}

export interface IssuesLockRequestBody {
	/**
	 * The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:
	 * \* `off-topic`
	 * \* `too heated`
	 * \* `resolved`
	 * \* `spam`
	 */
	lock_reason?: 'off-topic' | 'resolved' | 'spam' | 'too heated';
}

export interface IssuesLockProps
	extends Omit<RequestInit, 'method' | 'body'>,
		IssuesLockPathParams {
	body: IssuesLockRequestBody;
}

/**
 * Users with push access can lock an issue or pull request's conversation.
 *
 * Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."
 */
export async function issuesLock(props: IssuesLockProps) {
	const { owner, repo, issue_number, ...rest } = props;

	return _fetcher<unknown, unknown, IssuesLockRequestBody>({
		path: `/repos/${owner}/${repo}/issues/${issue_number}/lock`,
		method: 'PUT',
		...rest,
	});
}
