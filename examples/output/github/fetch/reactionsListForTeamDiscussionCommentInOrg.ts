/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface ReactionsListForTeamDiscussionCommentInOrgPathParams {
	org: string;
	team_slug: string;
	discussion_number: number;
	comment_number: number;
}

export interface ReactionsListForTeamDiscussionCommentInOrgQueryParams {
	content?: '+1' | '-1' | 'confused' | 'eyes' | 'heart' | 'hooray' | 'laugh' | 'rocket';
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface ReactionsListForTeamDiscussionCommentInOrgProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ReactionsListForTeamDiscussionCommentInOrgPathParams {
	queryParams: ReactionsListForTeamDiscussionCommentInOrgQueryParams;
	paramsSerializer?: (params: ReactionsListForTeamDiscussionCommentInOrgQueryParams) => string;
}

/**
 * List the reactions to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments/). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
 *
 * **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.
 */
export async function reactionsListForTeamDiscussionCommentInOrg(
	props: ReactionsListForTeamDiscussionCommentInOrgProps,
) {
	const { org, team_slug, discussion_number, comment_number, ...rest } = props;

	return _fetcher<unknown, ReactionsListForTeamDiscussionCommentInOrgQueryParams, unknown>({
		path: `/orgs/${org}/teams/${team_slug}/discussions/${discussion_number}/comments/${comment_number}/reactions`,
		method: 'GET',
		...rest,
	});
}
