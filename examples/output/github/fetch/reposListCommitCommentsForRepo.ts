/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface ReposListCommitCommentsForRepoPathParams {
	owner: string;
	repo: string;
}

export interface ReposListCommitCommentsForRepoQueryParams {
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface ReposListCommitCommentsForRepoProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ReposListCommitCommentsForRepoPathParams {
	queryParams: ReposListCommitCommentsForRepoQueryParams;
	paramsSerializer?: (params: ReposListCommitCommentsForRepoQueryParams) => string;
}

/**
 * Commit Comments use [these custom media types](https://docs.github.com/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/rest/overview/media-types/).
 *
 * Comments are ordered by ascending ID.
 */
export async function reposListCommitCommentsForRepo(props: ReposListCommitCommentsForRepoProps) {
	const { owner, repo, ...rest } = props;

	return _fetcher<unknown, ReposListCommitCommentsForRepoQueryParams, unknown>({
		path: `/repos/${owner}/${repo}/comments`,
		method: 'GET',
		...rest,
	});
}
