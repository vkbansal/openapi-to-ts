/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface ReposGetWebhookConfigForRepoPathParams {
	owner: string;
	repo: string;
	hook_id: number;
}

export interface ReposGetWebhookConfigForRepoProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ReposGetWebhookConfigForRepoPathParams {}

/**
 * Returns the webhook configuration for a repository. To get more information about the webhook, including the `active` state and `events`, use "[Get a repository webhook](/rest/reference/orgs#get-a-repository-webhook)."
 *
 * Access tokens must have the `read:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:read` permission.
 */
export async function reposGetWebhookConfigForRepo(props: ReposGetWebhookConfigForRepoProps) {
	const { owner, repo, hook_id, ...rest } = props;

	return _fetcher<unknown, unknown, unknown>({
		path: `/repos/${owner}/${repo}/hooks/${hook_id}/config`,
		method: 'GET',
		...rest,
	});
}
