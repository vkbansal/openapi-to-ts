/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

export interface ActivitySetThreadSubscriptionPathParams {
	thread_id: number;
}

export interface ActivitySetThreadSubscriptionRequestBody {
	/**
	 * Whether to block all notifications from a thread.
	 */
	ignored?: boolean;
}

export interface ActivitySetThreadSubscriptionProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ActivitySetThreadSubscriptionPathParams {
	body: ActivitySetThreadSubscriptionRequestBody;
}

/**
 * If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an **@mention**.
 *
 * You can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.
 *
 * Unsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the [Delete a thread subscription](https://docs.github.com/rest/reference/activity#delete-a-thread-subscription) endpoint.
 */
export async function activitySetThreadSubscription(props: ActivitySetThreadSubscriptionProps) {
	const { thread_id, body, ...rest } = props;

	const response = await fetch(`/notifications/threads/${thread_id}/subscription`, {
		method: 'PUT',
		body: JSON.stringify(body),
		...rest,
		headers: {
			'Content-Type': 'application/json',
			...rest.headers,
		},
	});

	const json = await response.json();

	return json;
}
