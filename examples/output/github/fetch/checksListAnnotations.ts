/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface ChecksListAnnotationsPathParams {
	owner: string;
	repo: string;
	check_run_id: number;
}

export interface ChecksListAnnotationsQueryParams {
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface ChecksListAnnotationsProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ChecksListAnnotationsPathParams {
	queryParams: ChecksListAnnotationsQueryParams;
	paramsSerializer?: (params: ChecksListAnnotationsQueryParams) => string;
}

/**
 * Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository.
 */
export async function checksListAnnotations(props: ChecksListAnnotationsProps) {
	const { owner, repo, check_run_id, ...rest } = props;

	return _fetcher<unknown, ChecksListAnnotationsQueryParams, unknown>({
		path: `/repos/${owner}/${repo}/check-runs/${check_run_id}/annotations`,
		method: 'GET',
		...rest,
	});
}
