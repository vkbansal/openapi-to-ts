/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface AppsCreateContentAttachmentPathParams {
	content_reference_id: number;
}

export interface AppsCreateContentAttachmentRequestBody {
	/**
	 * The body of the attachment
	 * @example "Body of the attachment"
	 */
	body: string;
	/**
	 * The title of the attachment
	 * @example "Title of the attachment"
	 */
	title: string;
}

export interface AppsCreateContentAttachmentProps
	extends Omit<RequestInit, 'method' | 'body'>,
		AppsCreateContentAttachmentPathParams {
	body: AppsCreateContentAttachmentRequestBody;
}

/**
 * Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` of the content reference from the [`content_reference` event](https://docs.github.com/webhooks/event-payloads/#content_reference) to create an attachment.
 *
 * The app must create a content attachment within six hours of the content reference URL being posted. See "[Using content attachments](https://docs.github.com/apps/using-content-attachments/)" for details about content attachments.
 *
 * You must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
 */
export async function appsCreateContentAttachment(props: AppsCreateContentAttachmentProps) {
	const { content_reference_id, ...rest } = props;

	return _fetcher<unknown, unknown, AppsCreateContentAttachmentRequestBody>({
		path: `/content_references/${content_reference_id}/attachments`,
		method: 'POST',
		...rest,
	});
}
