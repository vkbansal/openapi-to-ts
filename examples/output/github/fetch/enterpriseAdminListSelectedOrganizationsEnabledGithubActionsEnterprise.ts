/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprisePathParams {
	enterprise: string;
}

export interface EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseQueryParams {
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseProps
	extends Omit<RequestInit, 'method' | 'body'>,
		EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprisePathParams {
	queryParams: EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseQueryParams;
	paramsSerializer?: (
		params: EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseQueryParams,
	) => string;
}

/**
 * Lists the organizations that are selected to have GitHub Actions enabled in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise)."
 *
 * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
 */
export async function enterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise(
	props: EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseProps,
) {
	const { enterprise, ...rest } = props;

	return _fetcher<
		unknown,
		EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseQueryParams,
		unknown
	>({
		path: `/enterprises/${enterprise}/actions/permissions/organizations`,
		method: 'GET',
		...rest,
	});
}
