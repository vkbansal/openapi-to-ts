/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

export interface EnterpriseAdminSetInformationForProvisionedEnterpriseGroupPathParams {
	enterprise: string;
	scim_group_id: string;
}

export interface EnterpriseAdminSetInformationForProvisionedEnterpriseGroupRequestBody {
	/**
	 * The name of the SCIM group. This must match the GitHub organization that the group maps to.
	 */
	displayName: string;
	members?: Array<{
		/**
		 * The SCIM user ID for a user.
		 */
		value: string;
	}>;
	/**
	 * The SCIM schema URIs.
	 */
	schemas: string[];
}

export interface EnterpriseAdminSetInformationForProvisionedEnterpriseGroupProps
	extends Omit<RequestInit, 'method' | 'body'>,
		EnterpriseAdminSetInformationForProvisionedEnterpriseGroupPathParams {
	body: EnterpriseAdminSetInformationForProvisionedEnterpriseGroupRequestBody;
}

/**
 * **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.
 *
 * Replaces an existing provisioned groupâ€™s information. You must provide all the information required for the group as if you were provisioning it for the first time. Any existing group information that you don't provide will be removed, including group membership. If you want to only update a specific attribute, use the [Update an attribute for a SCIM enterprise group](#update-an-attribute-for-a-scim-enterprise-group) endpoint instead.
 */
export async function enterpriseAdminSetInformationForProvisionedEnterpriseGroup(
	props: EnterpriseAdminSetInformationForProvisionedEnterpriseGroupProps,
) {
	const { enterprise, scim_group_id, body, ...rest } = props;

	const response = await fetch(`/scim/v2/enterprises/${enterprise}/Groups/${scim_group_id}`, {
		method: 'PUT',
		body: JSON.stringify(body),
		...rest,
		headers: {
			'Content-Type': 'application/json',
			...rest.headers,
		},
	});

	const json = await response.json();

	return json;
}
