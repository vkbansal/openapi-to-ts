/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationPathParams {
	org: string;
}

export interface ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationQueryParams {
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationPathParams {
	queryParams: ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationQueryParams;
	paramsSerializer?: (
		params: ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationQueryParams,
	) => string;
}

/**
 * Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."
 *
 * You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
 */
export async function actionsListSelectedRepositoriesEnabledGithubActionsOrganization(
	props: ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationProps,
) {
	const { org, ...rest } = props;

	return _fetcher<
		unknown,
		ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationQueryParams,
		unknown
	>({
		path: `/orgs/${org}/actions/permissions/repositories`,
		method: 'GET',
		...rest,
	});
}
