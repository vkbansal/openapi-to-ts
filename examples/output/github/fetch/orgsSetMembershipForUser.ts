/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

export interface OrgsSetMembershipForUserPathParams {
	org: string;
	username: string;
}

export interface OrgsSetMembershipForUserRequestBody {
	/**
	 * The role to give the user in the organization. Can be one of:
	 * \* `admin` - The user will become an owner of the organization.
	 * \* `member` - The user will become a non-owner member of the organization.
	 * @default "member"
	 */
	role?: 'admin' | 'member';
}

export interface OrgsSetMembershipForUserProps
	extends Omit<RequestInit, 'method' | 'body'>,
		OrgsSetMembershipForUserPathParams {
	body: OrgsSetMembershipForUserRequestBody;
}

/**
 * Only authenticated organization owners can add a member to the organization or update the member's role.
 *
 * *   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user) will be `pending` until they accept the invitation.
 *
 * *   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.
 *
 * **Rate limits**
 *
 * To prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.
 */
export async function orgsSetMembershipForUser(props: OrgsSetMembershipForUserProps) {
	const { org, username, body, ...rest } = props;

	const response = await fetch(`/orgs/${org}/memberships/${username}`, {
		method: 'PUT',
		body: JSON.stringify(body),
		...rest,
		headers: {
			'Content-Type': 'application/json',
			...rest.headers,
		},
	});

	const json = await response.json();

	return json;
}
