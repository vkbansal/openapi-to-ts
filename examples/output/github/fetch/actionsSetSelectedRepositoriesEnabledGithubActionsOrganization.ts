/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationPathParams {
	org: string;
}

export interface ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationRequestBody {
	/**
	 * List of repository IDs to enable for GitHub Actions.
	 */
	selected_repository_ids: number[];
}

export interface ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationPathParams {
	body: ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationRequestBody;
}

/**
 * Replaces the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."
 *
 * You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
 */
export async function actionsSetSelectedRepositoriesEnabledGithubActionsOrganization(
	props: ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationProps,
) {
	const { org, ...rest } = props;

	return _fetcher<
		unknown,
		unknown,
		ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationRequestBody
	>({
		path: `/orgs/${org}/actions/permissions/repositories`,
		method: 'PUT',
		...rest,
	});
}
