/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { CodeScanningAlertDismissedReason } from '../schemas/CodeScanningAlertDismissedReason';
import { CodeScanningAlertSetState } from '../schemas/CodeScanningAlertSetState';
import { AlertNumber } from '../schemas/AlertNumber';

export interface CodeScanningUpdateAlertPathParams {
	owner: string;
	repo: string;
	alert_number: AlertNumber;
}

export interface CodeScanningUpdateAlertRequestBody {
	dismissed_reason?: CodeScanningAlertDismissedReason;
	state: CodeScanningAlertSetState;
}

export interface CodeScanningUpdateAlertProps
	extends Omit<RequestInit, 'method' | 'body'>,
		CodeScanningUpdateAlertPathParams {
	body: CodeScanningUpdateAlertRequestBody;
}

/**
 * Updates the status of a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` write permission to use this endpoint.
 */
export async function codeScanningUpdateAlert(props: CodeScanningUpdateAlertProps) {
	const { owner, repo, alert_number, body, ...rest } = props;

	const response = await fetch(`/repos/${owner}/${repo}/code-scanning/alerts/${alert_number}`, {
		method: 'PATCH',
		body: JSON.stringify(body),
		...rest,
		headers: {
			'Content-Type': 'application/json',
			...rest.headers,
		},
	});

	const json = await response.json();

	return json;
}
