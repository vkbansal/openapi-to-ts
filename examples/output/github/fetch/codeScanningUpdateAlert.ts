/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import type { CodeScanningAlertDismissedReason } from '../schemas/CodeScanningAlertDismissedReason';
import type { CodeScanningAlertSetState } from '../schemas/CodeScanningAlertSetState';
import type { AlertNumber } from '../schemas/AlertNumber';

import { fetcher as _fetcher } from './fetcher';

export interface CodeScanningUpdateAlertPathParams {
	owner: string;
	repo: string;
	alert_number: AlertNumber;
}

export interface CodeScanningUpdateAlertRequestBody {
	dismissed_reason?: CodeScanningAlertDismissedReason;
	state: CodeScanningAlertSetState;
}

export interface CodeScanningUpdateAlertProps
	extends Omit<RequestInit, 'method' | 'body'>,
		CodeScanningUpdateAlertPathParams {
	body: CodeScanningUpdateAlertRequestBody;
}

/**
 * Updates the status of a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` write permission to use this endpoint.
 */
export async function codeScanningUpdateAlert(props: CodeScanningUpdateAlertProps) {
	const { owner, repo, alert_number, ...rest } = props;

	return _fetcher<unknown, unknown, CodeScanningUpdateAlertRequestBody>({
		path: `/repos/${owner}/${repo}/code-scanning/alerts/${alert_number}`,
		method: 'PATCH',
		...rest,
	});
}
