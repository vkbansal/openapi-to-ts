/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

export interface MigrationsGetArchiveForAuthenticatedUserPathParams {
	migration_id: number;
}

export interface MigrationsGetArchiveForAuthenticatedUserProps
	extends Omit<RequestInit, 'method' | 'body'>,
		MigrationsGetArchiveForAuthenticatedUserPathParams {}

/**
 * Fetches the URL to download the migration archive as a `tar.gz` file. Depending on the resources your repository uses, the migration archive can contain JSON files with data for these objects:
 *
 * *   attachments
 * *   bases
 * *   commit\_comments
 * *   issue\_comments
 * *   issue\_events
 * *   issues
 * *   milestones
 * *   organizations
 * *   projects
 * *   protected\_branches
 * *   pull\_request\_reviews
 * *   pull\_requests
 * *   releases
 * *   repositories
 * *   review\_comments
 * *   schema
 * *   users
 *
 * The archive will also contain an `attachments` directory that includes all attachment files uploaded to GitHub.com and a `repositories` directory that contains the repository's Git data.
 */
export async function migrationsGetArchiveForAuthenticatedUser(
	props: MigrationsGetArchiveForAuthenticatedUserProps,
) {
	const { migration_id, ...rest } = props;

	const response = await fetch(`/user/migrations/${migration_id}/archive`, {
		method: 'GET',
		...rest,
		headers: {
			'Content-Type': 'application/json',
			...rest.headers,
		},
	});

	const json = await response.json();

	return json;
}
