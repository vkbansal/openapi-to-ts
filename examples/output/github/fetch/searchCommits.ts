/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface SearchCommitsQueryParams {
	q: string;
	sort?: 'author-date' | 'committer-date';
	/**
	 * @default "desc"
	 */
	order?: 'asc' | 'desc';
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface SearchCommitsProps extends Omit<RequestInit, 'method' | 'body'> {
	queryParams: SearchCommitsQueryParams;
	paramsSerializer?: (params: SearchCommitsQueryParams) => string;
}

/**
 * Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).
 *
 * When searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match
 * metadata](https://docs.github.com/rest/reference/search#text-match-metadata).
 *
 * For example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:
 *
 * `q=repo:octocat/Spoon-Knife+css`
 */
export async function searchCommits(props: SearchCommitsProps) {
	const { ...rest } = props;

	return _fetcher<unknown, SearchCommitsQueryParams, unknown>({
		path: `/search/commits`,
		method: 'GET',
		...rest,
	});
}
