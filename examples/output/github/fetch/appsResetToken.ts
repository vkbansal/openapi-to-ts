/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface AppsResetTokenPathParams {
	client_id: string;
}

export interface AppsResetTokenRequestBody {
	/**
	 * The access_token of the OAuth application.
	 */
	access_token: string;
}

export interface AppsResetTokenProps
	extends Omit<RequestInit, 'method' | 'body'>,
		AppsResetTokenPathParams {
	body: AppsResetTokenRequestBody;
}

/**
 * OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the "token" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.
 */
export async function appsResetToken(props: AppsResetTokenProps) {
	const { client_id, ...rest } = props;

	return _fetcher<unknown, unknown, AppsResetTokenRequestBody>({
		path: `/applications/${client_id}/token`,
		method: 'PATCH',
		...rest,
	});
}
