/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

export interface ActionsListWorkflowRunsPathParams {
	owner: string;
	repo: string;
	workflow_id: number & string;
}

export interface ActionsListWorkflowRunsQueryParams {
	actor?: string;
	branch?: string;
	event?: string;
	status?:
		| 'action_required'
		| 'cancelled'
		| 'completed'
		| 'failure'
		| 'in_progress'
		| 'neutral'
		| 'queued'
		| 'requested'
		| 'skipped'
		| 'stale'
		| 'success'
		| 'timed_out'
		| 'waiting';
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface ActionsListWorkflowRunsProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ActionsListWorkflowRunsPathParams {
	queryParams: ActionsListWorkflowRunsQueryParams;
}

/**
 * List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).
 *
 * Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.
 */
export async function actionsListWorkflowRuns(props: ActionsListWorkflowRunsProps) {
	const { owner, repo, workflow_id, queryParams, ...rest } = props;

	const response = await fetch(`/repos/${owner}/${repo}/actions/workflows/${workflow_id}/runs`, {
		method: 'GET',
		...rest,
		headers: {
			'Content-Type': 'application/json',
			...rest.headers,
		},
	});

	const json = await response.json();

	return json;
}
