/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface OrgsListForUserPathParams {
	username: string;
}

export interface OrgsListForUserQueryParams {
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface OrgsListForUserProps
	extends Omit<RequestInit, 'method' | 'body'>,
		OrgsListForUserPathParams {
	queryParams: OrgsListForUserQueryParams;
	paramsSerializer?: (params: OrgsListForUserQueryParams) => string;
}

/**
 * List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.
 *
 * This method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead.
 */
export async function orgsListForUser(props: OrgsListForUserProps) {
	const { username, ...rest } = props;

	return _fetcher<unknown, OrgsListForUserQueryParams, unknown>({
		path: `/users/${username}/orgs`,
		method: 'GET',
		...rest,
	});
}
