/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface SecretScanningListAlertsForRepoPathParams {
	owner: string;
	repo: string;
}

export interface SecretScanningListAlertsForRepoQueryParams {
	state?: 'open' | 'resolved';
	/**
	 * @default 1
	 */
	page?: number;
	/**
	 * @default 30
	 */
	per_page?: number;
}

export interface SecretScanningListAlertsForRepoProps
	extends Omit<RequestInit, 'method' | 'body'>,
		SecretScanningListAlertsForRepoPathParams {
	queryParams: SecretScanningListAlertsForRepoQueryParams;
	paramsSerializer?: (params: SecretScanningListAlertsForRepoQueryParams) => string;
}

/**
 * Lists all secret scanning alerts for a private repository, from newest to oldest. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.
 *
 * GitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.
 */
export async function secretScanningListAlertsForRepo(props: SecretScanningListAlertsForRepoProps) {
	const { owner, repo, ...rest } = props;

	return _fetcher<unknown, SecretScanningListAlertsForRepoQueryParams, unknown>({
		path: `/repos/${owner}/${repo}/secret-scanning/alerts`,
		method: 'GET',
		...rest,
	});
}
