/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface ActionsUpdateSelfHostedRunnerGroupForOrgPathParams {
	org: string;
	runner_group_id: number;
}

export interface ActionsUpdateSelfHostedRunnerGroupForOrgRequestBody {
	/**
	 * Name of the runner group.
	 */
	name?: string;
	/**
	 * Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories. Can be one of: `all`, `selected`, or `private`.
	 */
	visibility?: 'all' | 'private' | 'selected';
}

export interface ActionsUpdateSelfHostedRunnerGroupForOrgProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ActionsUpdateSelfHostedRunnerGroupForOrgPathParams {
	body: ActionsUpdateSelfHostedRunnerGroupForOrgRequestBody;
}

/**
 * The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."
 *
 * Updates the `name` and `visibility` of a self-hosted runner group in an organization.
 *
 * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
 */
export async function actionsUpdateSelfHostedRunnerGroupForOrg(
	props: ActionsUpdateSelfHostedRunnerGroupForOrgProps,
) {
	const { org, runner_group_id, ...rest } = props;

	return _fetcher<unknown, unknown, ActionsUpdateSelfHostedRunnerGroupForOrgRequestBody>({
		path: `/orgs/${org}/actions/runner-groups/${runner_group_id}`,
		method: 'PATCH',
		...rest,
	});
}
