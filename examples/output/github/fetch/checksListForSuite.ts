/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface ChecksListForSuitePathParams {
	owner: string;
	repo: string;
	check_suite_id: number;
}

export interface ChecksListForSuiteQueryParams {
	check_name?: string;
	status?: 'completed' | 'in_progress' | 'queued';
	/**
	 * @default "latest"
	 */
	filter?: 'all' | 'latest';
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface ChecksListForSuiteProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ChecksListForSuitePathParams {
	queryParams: ChecksListForSuiteQueryParams;
	paramsSerializer?: (params: ChecksListForSuiteQueryParams) => string;
}

/**
 * **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.
 *
 * Lists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.
 */
export async function checksListForSuite(props: ChecksListForSuiteProps) {
	const { owner, repo, check_suite_id, ...rest } = props;

	return _fetcher<unknown, ChecksListForSuiteQueryParams, unknown>({
		path: `/repos/${owner}/${repo}/check-suites/${check_suite_id}/check-runs`,
		method: 'GET',
		...rest,
	});
}
