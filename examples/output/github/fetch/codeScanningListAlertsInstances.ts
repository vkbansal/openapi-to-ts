/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import type { AlertNumber } from '../schemas/AlertNumber';
import type { CodeScanningRef } from '../schemas/CodeScanningRef';

import { fetcher as _fetcher } from './fetcher';

export interface CodeScanningListAlertsInstancesPathParams {
	owner: string;
	repo: string;
	alert_number: AlertNumber;
}

export interface CodeScanningListAlertsInstancesQueryParams {
	/**
	 * @default 1
	 */
	page?: number;
	/**
	 * @default 30
	 */
	per_page?: number;
	ref?: CodeScanningRef;
}

export interface CodeScanningListAlertsInstancesProps
	extends Omit<RequestInit, 'method' | 'body'>,
		CodeScanningListAlertsInstancesPathParams {
	queryParams: CodeScanningListAlertsInstancesQueryParams;
	paramsSerializer?: (params: CodeScanningListAlertsInstancesQueryParams) => string;
}

/**
 * Lists all instances of the specified code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.
 */
export async function codeScanningListAlertsInstances(props: CodeScanningListAlertsInstancesProps) {
	const { owner, repo, alert_number, ...rest } = props;

	return _fetcher<unknown, CodeScanningListAlertsInstancesQueryParams, unknown>({
		path: `/repos/${owner}/${repo}/code-scanning/alerts/${alert_number}/instances`,
		method: 'GET',
		...rest,
	});
}
