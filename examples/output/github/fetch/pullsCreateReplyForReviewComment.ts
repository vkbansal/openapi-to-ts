/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface PullsCreateReplyForReviewCommentPathParams {
	owner: string;
	repo: string;
	pull_number: number;
	comment_id: number;
}

export interface PullsCreateReplyForReviewCommentRequestBody {
	/**
	 * The text of the review comment.
	 */
	body: string;
}

export interface PullsCreateReplyForReviewCommentProps
	extends Omit<RequestInit, 'method' | 'body'>,
		PullsCreateReplyForReviewCommentPathParams {
	body: PullsCreateReplyForReviewCommentRequestBody;
}

/**
 * Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you are replying to. This must be the ID of a _top-level review comment_, not a reply to that comment. Replies to replies are not supported.
 *
 * This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.
 */
export async function pullsCreateReplyForReviewComment(
	props: PullsCreateReplyForReviewCommentProps,
) {
	const { owner, repo, pull_number, comment_id, ...rest } = props;

	return _fetcher<unknown, unknown, PullsCreateReplyForReviewCommentRequestBody>({
		path: `/repos/${owner}/${repo}/pulls/${pull_number}/comments/${comment_id}/replies`,
		method: 'POST',
		...rest,
	});
}
