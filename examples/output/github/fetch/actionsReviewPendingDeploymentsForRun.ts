/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface ActionsReviewPendingDeploymentsForRunPathParams {
	owner: string;
	repo: string;
	run_id: number;
}

export interface ActionsReviewPendingDeploymentsForRunRequestBody {
	/**
	 * A comment to accompany the deployment review
	 * @example "Ship it!"
	 */
	comment: string;
	/**
	 * The list of environment ids to approve or reject
	 * @example [161171787,161171795]
	 */
	environment_ids: number[];
	/**
	 * Whether to approve or reject deployment to the specified environments. Must be one of: `approved` or `rejected`
	 * @example "approved"
	 */
	state: 'approved' | 'rejected';
}

export interface ActionsReviewPendingDeploymentsForRunProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ActionsReviewPendingDeploymentsForRunPathParams {
	body: ActionsReviewPendingDeploymentsForRunRequestBody;
}

/**
 * Approve or reject pending deployments that are waiting on approval by a required reviewer.
 *
 * Anyone with read access to the repository contents and deployments can use this endpoint.
 */
export async function actionsReviewPendingDeploymentsForRun(
	props: ActionsReviewPendingDeploymentsForRunProps,
) {
	const { owner, repo, run_id, ...rest } = props;

	return _fetcher<unknown, unknown, ActionsReviewPendingDeploymentsForRunRequestBody>({
		path: `/repos/${owner}/${repo}/actions/runs/${run_id}/pending_deployments`,
		method: 'POST',
		...rest,
	});
}
