/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface MigrationsGetCommitAuthorsPathParams {
	owner: string;
	repo: string;
}

export interface MigrationsGetCommitAuthorsQueryParams {
	since?: number;
}

export interface MigrationsGetCommitAuthorsProps
	extends Omit<RequestInit, 'method' | 'body'>,
		MigrationsGetCommitAuthorsPathParams {
	queryParams: MigrationsGetCommitAuthorsQueryParams;
	paramsSerializer?: (params: MigrationsGetCommitAuthorsQueryParams) => string;
}

/**
 * Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.
 *
 * This endpoint and the [Map a commit author](https://docs.github.com/rest/reference/migrations#map-a-commit-author) endpoint allow you to provide correct Git author information.
 */
export async function migrationsGetCommitAuthors(props: MigrationsGetCommitAuthorsProps) {
	const { owner, repo, ...rest } = props;

	return _fetcher<unknown, MigrationsGetCommitAuthorsQueryParams, unknown>({
		path: `/repos/${owner}/${repo}/import/authors`,
		method: 'GET',
		...rest,
	});
}
