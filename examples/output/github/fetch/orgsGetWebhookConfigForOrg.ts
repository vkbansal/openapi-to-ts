/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.

import { fetcher as _fetcher } from './fetcher';

export interface OrgsGetWebhookConfigForOrgPathParams {
	org: string;
	hook_id: number;
}

export interface OrgsGetWebhookConfigForOrgProps
	extends Omit<RequestInit, 'method' | 'body'>,
		OrgsGetWebhookConfigForOrgPathParams {}

/**
 * Returns the webhook configuration for an organization. To get more information about the webhook, including the `active` state and `events`, use "[Get an organization webhook ](/rest/reference/orgs#get-an-organization-webhook)."
 *
 * Access tokens must have the `admin:org_hook` scope, and GitHub Apps must have the `organization_hooks:read` permission.
 */
export async function orgsGetWebhookConfigForOrg(props: OrgsGetWebhookConfigForOrgProps) {
	const { org, hook_id, ...rest } = props;

	return _fetcher<unknown, unknown, unknown>({
		path: `/orgs/${org}/hooks/${hook_id}/config`,
		method: 'GET',
		...rest,
	});
}
