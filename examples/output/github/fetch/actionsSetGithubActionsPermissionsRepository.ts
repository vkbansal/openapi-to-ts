/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { AllowedActions } from '../schemas/AllowedActions';
import { ActionsEnabled } from '../schemas/ActionsEnabled';

export interface ActionsSetGithubActionsPermissionsRepositoryPathParams {
	owner: string;
	repo: string;
}

export interface ActionsSetGithubActionsPermissionsRepositoryRequestBody {
	allowed_actions?: AllowedActions;
	enabled: ActionsEnabled;
}

export interface ActionsSetGithubActionsPermissionsRepositoryProps
	extends Omit<RequestInit, 'method' | 'body'>,
		ActionsSetGithubActionsPermissionsRepositoryPathParams {
	body: ActionsSetGithubActionsPermissionsRepositoryRequestBody;
}

/**
 * Sets the GitHub Actions permissions policy for enabling GitHub Actions and allowed actions in the repository.
 *
 * If the repository belongs to an organization or enterprise that has set restrictive permissions at the organization or enterprise levels, such as `allowed_actions` to `selected` actions, then you cannot override them for the repository.
 *
 * You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.
 */
export async function actionsSetGithubActionsPermissionsRepository(
	props: ActionsSetGithubActionsPermissionsRepositoryProps,
) {
	const { owner, repo, body, ...rest } = props;

	const response = await fetch(`/repos/${owner}/${repo}/actions/permissions`, {
		method: 'PUT',
		body: JSON.stringify(body),
		...rest,
		headers: {
			'Content-Type': 'application/json',
			...rest.headers,
		},
	});

	const json = await response.json();

	return json;
}
