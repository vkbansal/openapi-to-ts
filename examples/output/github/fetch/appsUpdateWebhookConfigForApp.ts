/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import type { WebhookConfigContentType } from '../schemas/WebhookConfigContentType';
import type { WebhookConfigInsecureSsl } from '../schemas/WebhookConfigInsecureSsl';
import type { WebhookConfigSecret } from '../schemas/WebhookConfigSecret';
import type { WebhookConfigUrl } from '../schemas/WebhookConfigUrl';

import { fetcher as _fetcher } from './fetcher';

/**
 * @example {"content_type":"json","insecure_ssl":"0","secret":"********","url":"https://example.com/webhook"}
 */
export interface AppsUpdateWebhookConfigForAppRequestBody {
	content_type?: WebhookConfigContentType;
	insecure_ssl?: WebhookConfigInsecureSsl;
	secret?: WebhookConfigSecret;
	url?: WebhookConfigUrl;
}

export interface AppsUpdateWebhookConfigForAppProps extends Omit<RequestInit, 'method' | 'body'> {
	body: AppsUpdateWebhookConfigForAppRequestBody;
}

/**
 * Updates the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see "[Creating a GitHub App](/developers/apps/creating-a-github-app)."
 *
 * You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
 */
export async function appsUpdateWebhookConfigForApp(props: AppsUpdateWebhookConfigForAppProps) {
	const { ...rest } = props;

	return _fetcher<unknown, unknown, AppsUpdateWebhookConfigForAppRequestBody>({
		path: `/app/hook/config`,
		method: 'PATCH',
		...rest,
	});
}
