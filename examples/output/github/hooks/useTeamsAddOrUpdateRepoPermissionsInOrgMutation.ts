/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { useMutation } from '@tanstack/react-query';

export interface UseTeamsAddOrUpdateRepoPermissionsInOrgMutationPathParams {
	org: string;
	team_slug: string;
	owner: string;
	repo: string;
}

export interface UseTeamsAddOrUpdateRepoPermissionsInOrgMutationRequestBody {
	/**
	 * The permission to grant the team on this repository. Can be one of:
	 * \* `pull` - team members can pull, but not push to or administer this repository.
	 * \* `push` - team members can pull and push, but not administer this repository.
	 * \* `admin` - team members can pull, push and administer this repository.
	 * \* `maintain` - team members can manage the repository without access to sensitive or destructive actions. Recommended for project managers. Only applies to repositories owned by organizations.
	 * \* `triage` - team members can proactively manage issues and pull requests without write access. Recommended for contributors who triage a repository. Only applies to repositories owned by organizations.
	 *
	 * If no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.
	 */
	permission?: 'admin' | 'maintain' | 'pull' | 'push' | 'triage';
}

export interface UseTeamsAddOrUpdateRepoPermissionsInOrgMutationProps
	extends UseTeamsAddOrUpdateRepoPermissionsInOrgMutationPathParams {
	body: UseTeamsAddOrUpdateRepoPermissionsInOrgMutationRequestBody;
}

/**
 * To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."
 *
 * **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
 *
 * For more information about the permission levels, see "[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)".
 */

export function useTeamsAddOrUpdateRepoPermissionsInOrgMutation(
	props: UseTeamsAddOrUpdateRepoPermissionsInOrgMutationProps,
) {
	return useMutation(() => Promise.resolve());
}
