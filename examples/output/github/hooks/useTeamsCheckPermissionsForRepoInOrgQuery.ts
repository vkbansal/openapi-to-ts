/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { useQuery } from '@tanstack/react-query';

export interface TeamsCheckPermissionsForRepoInOrgPathParams {
	org: string;
	team_slug: string;
	owner: string;
	repo: string;
}

export interface UseTeamsCheckPermissionsForRepoInOrgQueryProps
	extends TeamsCheckPermissionsForRepoInOrgPathParams {}

/**
 * Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.
 *
 * You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.
 *
 * If a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.
 *
 * **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
 */

export function useTeamsCheckPermissionsForRepoInOrgQuery(
	props: UseTeamsCheckPermissionsForRepoInOrgQueryProps,
) {
	const { org, team_slug, owner, repo } = props;

	return useQuery(['teams/check-permissions-for-repo-in-org', org, team_slug, owner, repo]);
}
