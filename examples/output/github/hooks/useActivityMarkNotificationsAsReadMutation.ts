/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { useMutation } from '@tanstack/react-query';

export interface UseActivityMarkNotificationsAsReadMutationRequestBody {
	/**
	 * Describes the last point that notifications were checked.
	 * @format date-time
	 */
	last_read_at?: string;
	/**
	 * Whether the notification has been read.
	 */
	read?: boolean;
}

export interface UseActivityMarkNotificationsAsReadMutationProps {
	body: UseActivityMarkNotificationsAsReadMutationRequestBody;
}

/**
 * Marks all notifications as "read" removes it from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as "read." To check whether any "unread" notifications remain, you can use the [List notifications for the authenticated user](https://docs.github.com/rest/reference/activity#list-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`.
 */

export function useActivityMarkNotificationsAsReadMutation(
	props: UseActivityMarkNotificationsAsReadMutationProps,
) {
	return useMutation(() => Promise.resolve());
}
