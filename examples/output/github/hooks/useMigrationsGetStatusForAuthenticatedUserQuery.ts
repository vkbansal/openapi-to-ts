/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { useQuery } from '@tanstack/react-query';

export interface UseMigrationsGetStatusForAuthenticatedUserQueryPathParams {
	migration_id: number;
}

export interface UseMigrationsGetStatusForAuthenticatedUserQueryQueryParams {
	exclude?: string[];
}

export interface UseMigrationsGetStatusForAuthenticatedUserQueryProps
	extends UseMigrationsGetStatusForAuthenticatedUserQueryPathParams {
	queryParams: UseMigrationsGetStatusForAuthenticatedUserQueryQueryParams;
}

/**
 * Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following values:
 *
 * *   `pending` - the migration hasn't started yet.
 * *   `exporting` - the migration is in progress.
 * *   `exported` - the migration finished successfully.
 * *   `failed` - the migration failed.
 *
 * Once the migration has been `exported` you can [download the migration archive](https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive).
 */

export function useMigrationsGetStatusForAuthenticatedUserQuery(
	props: UseMigrationsGetStatusForAuthenticatedUserQueryProps,
) {
	const { migration_id, queryParams } = props;

	return useQuery(['migrations/get-status-for-authenticated-user', migration_id, queryParams]);
}
