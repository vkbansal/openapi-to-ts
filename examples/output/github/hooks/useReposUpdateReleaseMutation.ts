/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { useMutation } from '@tanstack/react-query';

export interface UseReposUpdateReleaseMutationPathParams {
	owner: string;
	repo: string;
	release_id: number;
}

export interface UseReposUpdateReleaseMutationRequestBody {
	/**
	 * Text describing the contents of the tag.
	 */
	body?: string;
	/**
	 * `true` makes the release a draft, and `false` publishes the release.
	 */
	draft?: boolean;
	/**
	 * The name of the release.
	 */
	name?: string;
	/**
	 * `true` to identify the release as a prerelease, `false` to identify the release as a full release.
	 */
	prerelease?: boolean;
	/**
	 * The name of the tag.
	 */
	tag_name?: string;
	/**
	 * Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`).
	 */
	target_commitish?: string;
}

export interface UseReposUpdateReleaseMutationProps
	extends UseReposUpdateReleaseMutationPathParams {
	body: UseReposUpdateReleaseMutationRequestBody;
}

/**
 * Users with push access to the repository can edit a release.
 */

export function useReposUpdateReleaseMutation(props: UseReposUpdateReleaseMutationProps) {
	return useMutation(() => Promise.resolve());
}
