/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { useMutation } from '@tanstack/react-query';

export interface UseReposCreateReleaseMutationPathParams {
	owner: string;
	repo: string;
}

export interface UseReposCreateReleaseMutationRequestBody {
	/**
	 * Text describing the contents of the tag.
	 */
	body?: string;
	/**
	 * `true` to create a draft (unpublished) release, `false` to create a published one.
	 */
	draft?: boolean;
	/**
	 * The name of the release.
	 */
	name?: string;
	/**
	 * `true` to identify the release as a prerelease. `false` to identify the release as a full release.
	 */
	prerelease?: boolean;
	/**
	 * The name of the tag.
	 */
	tag_name: string;
	/**
	 * Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`).
	 */
	target_commitish?: string;
}

export interface UseReposCreateReleaseMutationProps
	extends UseReposCreateReleaseMutationPathParams {
	body: UseReposCreateReleaseMutationRequestBody;
}

/**
 * Users with push access to the repository can create a release.
 *
 * This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.
 */

export function useReposCreateReleaseMutation(props: UseReposCreateReleaseMutationProps) {
	return useMutation(() => Promise.resolve());
}
