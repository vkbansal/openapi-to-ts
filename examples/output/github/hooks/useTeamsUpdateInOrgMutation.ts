/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { useMutation } from '@tanstack/react-query';

export interface UseTeamsUpdateInOrgMutationPathParams {
	org: string;
	team_slug: string;
}

export interface UseTeamsUpdateInOrgMutationRequestBody {
	/**
	 * The description of the team.
	 */
	description?: string;
	/**
	 * The name of the team.
	 */
	name?: string;
	/**
	 * The ID of a team to set as the parent team.
	 */
	parent_team_id?: number | null;
	/**
	 * **Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:
	 * \* `pull` - team members can pull, but not push to or administer newly-added repositories.
	 * \* `push` - team members can pull and push, but not administer newly-added repositories.
	 * \* `admin` - team members can pull, push and administer newly-added repositories.
	 * @default "pull"
	 */
	permission?: 'admin' | 'pull' | 'push';
	/**
	 * The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. When a team is nested, the `privacy` for parent teams cannot be `secret`. The options are:
	 * **For a non-nested team:**
	 * \* `secret` - only visible to organization owners and members of this team.
	 * \* `closed` - visible to all members of this organization.
	 * **For a parent or child team:**
	 * \* `closed` - visible to all members of this organization.
	 */
	privacy?: 'closed' | 'secret';
}

export interface UseTeamsUpdateInOrgMutationProps extends UseTeamsUpdateInOrgMutationPathParams {
	body: UseTeamsUpdateInOrgMutationRequestBody;
}

/**
 * To edit a team, the authenticated user must either be an organization owner or a team maintainer.
 *
 * **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}`.
 */

export function useTeamsUpdateInOrgMutation(props: UseTeamsUpdateInOrgMutationProps) {
	return useMutation(() => Promise.resolve());
}
