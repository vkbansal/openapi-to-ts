/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { useQuery } from '@tanstack/react-query';

export interface TeamsListPendingInvitationsInOrgPathParams {
	org: string;
	team_slug: string;
}

export interface TeamsListPendingInvitationsInOrgQueryParams {
	/**
	 * @default 30
	 */
	per_page?: number;
	/**
	 * @default 1
	 */
	page?: number;
}

export interface UseTeamsListPendingInvitationsInOrgQueryProps
	extends TeamsListPendingInvitationsInOrgPathParams {
	queryParams: TeamsListPendingInvitationsInOrgQueryParams;
}

/**
 * The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.
 *
 * **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/invitations`.
 */

export function useTeamsListPendingInvitationsInOrgQuery(
	props: UseTeamsListPendingInvitationsInOrgQueryProps,
) {
	const { org, team_slug, queryParams } = props;

	return useQuery(['teams/list-pending-invitations-in-org', org, team_slug, queryParams]);
}
