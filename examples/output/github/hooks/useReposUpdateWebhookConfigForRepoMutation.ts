/* eslint-disable */
// This code is autogenerated using @oa2ts/cli.
// Please do not modify this code directly.
import { useMutation } from '@tanstack/react-query';

import type { WebhookConfigContentType } from '../schemas/WebhookConfigContentType';
import type { WebhookConfigInsecureSsl } from '../schemas/WebhookConfigInsecureSsl';
import type { WebhookConfigSecret } from '../schemas/WebhookConfigSecret';
import type { WebhookConfigUrl } from '../schemas/WebhookConfigUrl';

export interface UseReposUpdateWebhookConfigForRepoMutationPathParams {
	owner: string;
	repo: string;
	hook_id: number;
}

/**
 * @example {"content_type":"json","insecure_ssl":"0","secret":"********","url":"https://example.com/webhook"}
 */
export interface UseReposUpdateWebhookConfigForRepoMutationRequestBody {
	content_type?: WebhookConfigContentType;
	insecure_ssl?: WebhookConfigInsecureSsl;
	secret?: WebhookConfigSecret;
	url?: WebhookConfigUrl;
}

export interface UseReposUpdateWebhookConfigForRepoMutationProps
	extends UseReposUpdateWebhookConfigForRepoMutationPathParams {
	body: UseReposUpdateWebhookConfigForRepoMutationRequestBody;
}

/**
 * Updates the webhook configuration for a repository. To update more information about the webhook, including the `active` state and `events`, use "[Update a repository webhook](/rest/reference/orgs#update-a-repository-webhook)."
 *
 * Access tokens must have the `write:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:write` permission.
 */

export function useReposUpdateWebhookConfigForRepoMutation(
	props: UseReposUpdateWebhookConfigForRepoMutationProps,
) {
	return useMutation(() => Promise.resolve());
}
